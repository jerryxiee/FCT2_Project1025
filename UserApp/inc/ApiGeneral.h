/*******************(C)深圳市伊爱高新技术开发有限公司版权所有****************************
**  文件名称:   Api_General.h
**  创建作者:   欧恩惠
**  当前版本:   1.0.0.0
**  创建日期:   20130622
**  功能说明:   
**  修改记录:        
**  备    注:   
**********************************(C)copyright 2013**************************************/

#ifndef __API_GENERAL_H_
#define __API_GENERAL_H_
#include "Include.h"
#ifndef ElemType
#define ElemType u8
#endif
//位操作
#define BIT_SET(x,n) ((x)=((x) | (0x01<<(n))))
#define BIT_TEST(x,n) (((x) & (0x01<<(n)))!=0)
#define BIT_CLEAR(x,n) ((x)=((x) & ~(0x01<<(n))))

#define ASCII_SPACE		0x20
#define PARAM_FLAG			0xFF112233
typedef enum 
{
FCT_ERROR = 0, 			//检测错误
FCT_SUCCESS,				//检测OK
FCT_MSG_UP					//透传数据
} FctErrorStatus;

typedef enum 
{
OPEN_CIRCUIT = 0, 			//开路
SHORT_CIRCUIT,				//短路
GNSSANT_NORMAL				//正常
} GnssAntStatus;
typedef struct __GNSS_CMD_INFO
{
	u8 sGnssType[16];		//GNSS类型名(包括引号)
	u8 nTotalItem;			//GNSS测试命令条数
	u8 nTotalPacket;		//GNSS命令总包数
	u8 nRcvPacket;			//GNSS命令已经接收的包数
	u8 nSendPacket;		//GNSS命令已经发送的包数
	u16 nCmdLen;			//当前GNSS命令长度
	u8 sCmdBuf[2*1024];	//存放指令
	u32 nParamFlag;			//存储标志
}GnssCmdInfo;
extern GnssCmdInfo g_GnssCmdInfo;
typedef void (*PC_FUNC_PTR)(u8 *pFrame,u16 nLen);
#define PC_FUNC_NUM					15
extern PC_FUNC_PTR Pc_Func_Tbl[PC_FUNC_NUM];	//EYE指令回调函数

#define GNSS_TYPE_LEN				16
#define GNSS_CMD_ITEM_LEN			1
#define GNSS_TOTAL_PACKET_LEN		1
#define GNSS_RCV_PACKET_LEN		1
#define GNSS_SEND_PACKET_LEN		1
#define GNSS_CMD_DATA_LEN			2

#define GNSS_CMD_FLASH_ADDR		((u32 )0x00000000)
#define GNSS_TYPE_ADDR				GNSS_CMD_FLASH_ADDR
#define GNSS_CMD_ITEM_ADDR			GNSS_CMD_FLASH_ADDR + GNSS_TYPE_LEN
#define GNSS_TOTAL_PACKET_ADDR	GNSS_CMD_ITEM_ADDR + GNSS_CMD_ITEM_LEN
#define GNSS_RCV_PACKET_ADDR		GNSS_TOTAL_PACKET_ADDR + GNSS_TOTAL_PACKET_LEN
#define GNSS_SEND_PACKET_ADDR		GNSS_RCV_PACKET_ADDR + GNSS_RCV_PACKET_LEN
#define GNSS_CMD_DATA_ADDR			GNSS_SEND_PACKET_ADDR + GNSS_SEND_PACKET_LEN


#define GNSS_CMD_FLASH_Sector		FLASH_Sector_11	
#define ADDR_FLASH_SECTOR_0     ((uint32_t)0x08000000) /* Base @ of Sector 0, 16 Kbytes */
#define ADDR_FLASH_SECTOR_1     ((uint32_t)0x08004000) /* Base @ of Sector 1, 16 Kbytes */
#define ADDR_FLASH_SECTOR_2     ((uint32_t)0x08008000) /* Base @ of Sector 2, 16 Kbytes */
#define ADDR_FLASH_SECTOR_3     ((uint32_t)0x0800C000) /* Base @ of Sector 3, 16 Kbytes */
#define ADDR_FLASH_SECTOR_4     ((uint32_t)0x08010000) /* Base @ of Sector 4, 64 Kbytes */
#define ADDR_FLASH_SECTOR_5     ((uint32_t)0x08020000) /* Base @ of Sector 5, 128 Kbytes */
#define ADDR_FLASH_SECTOR_6     ((uint32_t)0x08040000) /* Base @ of Sector 6, 128 Kbytes */
#define ADDR_FLASH_SECTOR_7     ((uint32_t)0x08060000) /* Base @ of Sector 7, 128 Kbytes */
#define ADDR_FLASH_SECTOR_8     ((uint32_t)0x08080000) /* Base @ of Sector 8, 128 Kbytes */
#define ADDR_FLASH_SECTOR_9     ((uint32_t)0x080A0000) /* Base @ of Sector 9, 128 Kbytes */
#define ADDR_FLASH_SECTOR_10    ((uint32_t)0x080C0000) /* Base @ of Sector 10, 128 Kbytes */
#define ADDR_FLASH_SECTOR_11    ((uint32_t)0x080E0000) /* Base @ of Sector 11, 128 Kbytes */

//常用宏函数
#define ABS(x)           (((x) < 0) ? -(x) : (x))
#define MAX(a,b)         ((a < b) ?  (b) : (a))
#define MIN(a,b)		 ((a > b) ?  (b) : (a))	
#define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
#define IsLower(c)	(((c)>='a')&&((c)<='z'))
#define IsDigit(c)	(((c)>='0')&&((c)<='9'))
#define htonl(l) ((((l) & 0xff000000) >> 24) | \
           			(((l) & 0x00ff0000) >>  8) | \
              		(((l) & 0x0000ff00) <<  8) | \
              		(((l) & 0x000000ff) << 24))
#define ntohl(l) htonl(l)
#define htons(s) ((((s) >> 8) & 0xff) | \
             		(((s) << 8) & 0xff00))
#define ntohs(s) htons(s)
#define U8_MAX     ((u32)255)
#define S8_MAX     ((s8)127)
#define S8_MIN     ((s8)-128)
#define U16_MAX    ((u16)65535u)
#define S16_MAX    ((s16)32767)
#define S16_MIN    ((s16)-32768)
#define U32_MAX    ((u32)4294967295uL)
#define S32_MAX    ((s32)2147483647)
#define S32_MIN    ((s32)-2147483648)
#define Hex2Ascii(hex)  (hex < 10)? ('0' + hex) : ('A' + hex - 10)
/*******************************************************************************
**  函数名称  : void TimingDelay_Decrement(void)
**  函数功能  : 减少定时器计数
**  输    入  : 无	
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :每次systick到来一次减少1，直到0为止
*******************************************************************************/
void TimingDelay_Decrement(void);

/*******************************************************************************
**  函数名称  : void TimingDelay_Set(u32 nTime)
**  函数功能  : 设置systick定时器
**  输    入  : 无	
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void TimingDelay_Set(u32 nTime);

/*******************************************************************************
**  函数名称  : bool TimingDelay_TimeOut(void)
**  函数功能  : 判断systick定时器是否超时
**  输    入  : 无	
**  输    出  : true:已经超时 false:还未超时
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
bool TimingDelay_TimeOut(void);

/*******************************************************************************
**  函数名称  : Delay(__IO uint32_t nTime)
**  函数功能  : systick定时器延迟
**  输    入  : nTime:延迟的时基个数
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :延迟的时间长短与system时基相关
*******************************************************************************/
void Delay(__IO uint32_t nTime);

/*******************************************************************************
**  函数名称  : void Delay_s(u32 Sec)
**  函数功能  : 延迟秒，在这期间代码不会往下执行。
**  输    入  : ns:延迟的秒数
					
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Delay_s(u32 Sec);

/*******************************************************************************
**  函数名称  : void Delay_ms(u32 nMs)
**  函数功能  : 延迟N毫秒，在这期间代码不会往下执行。
**  输    入  : nMs:延迟的毫秒数，小于2000
					
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Delay_ms(u32 nMs);

/*******************************************************************************
**  函数名称  : void Delay_us(u32 nUs)
**  函数功能  : 延迟N微秒，在这期间代码不会往下执行。
**  输    入  : nUs:延迟的微秒数，小于2000000
					
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Delay_us(u32 nUs);

/*************************************************************
** 函数名称:  Print_Debug_Msg
** 功能描述:  打印调试信息
** 输入参数:  sTitle:打印标题
**				sPrintfBuf:消息
**				nPrintfLen:消息长度
** 输出参数:  无
** 创建:  oueh 2013.05.23
** Note:
***************************************************************/
void Print_Debug_Msg(const u8 *sTitle,const u8 *sPrintfBuf,const u32 nPrintfLen);

/*******************************************************************************
**  函数名称  : void Pc_Ack(FctErrorStatus Status,u8 pMsg,u16 nLen)
**  函数功能  : 给PC返回应答
**  输    入  : 	Status:成功或失败
					pMsg:附加数据
					nLen:附加数据长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Pc_Ack(FctErrorStatus Status,u8 *pMsg,u16 nLen);

/*******************************************************************************
**  函数名称  : void Get_IoInput_State(void)
**  函数功能  : 获取输入IO的状态
**  输    入  : 无
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Get_IoInput_State(void);

/*************************************************************
** 函数名称:  void XHV_Volt_Set(u8 nVolt)
** 功能描述:  设置电压
** 输入参数:  nVolt:XHV电压值
** 输出参数:  true:成功 false:失败
** 创建:  oueh 2013.7.08
** Note:
***************************************************************/
bool XHV_Volt_Set(u8 nVolt);

/*************************************************************
** 函数名称:  bool XBAT_Volt_Set(u8 nVolt)
** 功能描述:  设置模拟电池电压
** 输入参数:  nVolt:XBAT电压值*10
** 输出参数:  true:成功 false:失败
** 创建:  oueh 2013.7.08
** Note:	
XBAT	XBAT_EN	XBAT_FB1	XBAT_FB2
3.3V		1			0			0
4.05V		1			1			0
4.5V		1			0			1
***************************************************************/
bool XBAT_Volt_Set(u8 nVolt);

/*******************************************************************************
**  函数名称  : void High_Prio_Task(void)
**  函数功能  : 执行高优先级的任务
**  输    入  : 无
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :例如:喂狗
*******************************************************************************/
void High_Prio_Task();

/*******************************************************************************
**  函数名称  : bool EYE_COMMAND(u8 *pCmd,u16 nCmdLen,u32 TimeOut,u8 WaitChar,u8 *pRet,u16 *pRetLen)
**  函数功能  : 执行EYE命令
**  输    入  : 	pCmd:指向命令
**					nCmdLen:命令长度
**					TimeOut: 超时等待时间(毫秒)
**					WartChar:等待返回的字符
**					pRet:指向返回的数据
**					nRetLen:返回的数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
bool EYE_COMMAND(u8 *pCmd,u16 nCmdLen,u32 nTimeOut,u8 cWaitChar,u8 *pRet,u16 *pRetLen);

/*******************************************************************************
**  函数名称  : void Eye_Debug(ElemType *pFrame,u16 nLen)
**  函数功能  : 握手
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Debug(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Sin(ElemType *pFrame,u16 nLen)
**  函数功能  : 开关量输入测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Sin(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Sout(ElemType *pFrame,u16 nLen)
**  函数功能  : 开关量输出测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Sout(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Vin(ElemType *pFrame,u16 nLen)
**  函数功能  : 模拟量输入
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Vin(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Vout(ElemType *pFrame,u16 nLen)
**  函数功能  : 模拟量输出
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Vout(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Com(ElemType *pFrame,u16 nLen)
**  函数功能  : 通讯接口测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Com(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_GnssAnte(ElemType *pFrame,u16 nLen)
**  函数功能  : GNSS天线测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_GnssAnte(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Mbcom(ElemType *pFrame,u16 nLen)
**  函数功能  : 移动通讯测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Mbcom(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_CheckSelf(ElemType *pFrame,u16 nLen)
**  函数功能  : 自检测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_CheckSelf(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Gnss(ElemType *pFrame,u16 nLen)
**  函数功能  : GNSS测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Gnss(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Power(ElemType *pFrame,u16 nLen)
**  函数功能  : 高/低压测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Power(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Battery(ElemType *pFrame,u16 nLen)
**  函数功能  : 电池充/放电测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Battery(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Count(ElemType *pFrame,u16 nLen)
**  函数功能  : 计数测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Count(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Pwm(ElemType *pFrame,u16 nLen)
**  函数功能  : PWM测试
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Pwm(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void Eye_Cmd(ElemType *pFrame,u16 nLen)
**  函数功能  : 接收平台下发的测试指令
**  输    入  : 	pFrame:指向PC下发的数据
					len:数据的长度
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Eye_Cmd(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : bool GnssAnt_Set_State(GnssAntStatus Status)
**  函数功能  : 设置天线状态
**  输    入  : 	Status:设置的天线状态
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
bool GnssAnt_Set_State(GnssAntStatus Status);

/*******************************************************************************
**  函数名称  : void RcvFifo4Msg(void)
**  函数功能  : 获取协议帧数据
**  输    入  : 无
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  : 从接收FIFO4 中提取出符合协议的正确帧。
*******************************************************************************/
void RcvFifo4Msg(void);

/*******************************************************************************
**  函数名称  : void Delay_Cnt(u32 cnt)
**  函数功能  : 计数的方式进行延迟
**  输    入  : cnt:空指令的个数
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :
*******************************************************************************/
void Delay_Cnt(u32 cnt);

/*******************************************************************************
**  函数名称  : void Parse_Fifo4_Msg(ElemType *pFrame,u16 nLen)
**  函数功能  : 解析串口4的数据帧
**  输    入  :	pFrame:指向待解析的数据帧
					nLen:数据帧长度
**  输    出  : 	无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  : 
*******************************************************************************/
void Parse_Fifo4_Msg(ElemType *pFrame,u16 nLen);

/*******************************************************************************
**  函数名称  : void High_Prio_Task(void)
**  函数功能  : 执行高优先级的任务
**  输    入  : 无
**  输    出  : 无
**  全局变量  : 无
**  调用函数  : 无
**  中断资源  : 无
**  备    注  :例如:喂狗
*******************************************************************************/
void High_Prio_Task();

/*************************************************************
** 函数名称:  CheckSum
** 功能描述:  计算8位异或校验
** 输入参数:  pMsg:指向要计算的消息
**				nLen:消息的长度
** 输出参数:  8位异或校验
** 创建:  oueh 2013.05.23
** Note:
***************************************************************/
u8  CheckSum(u8 *pMsg,u32 nLen);

/*************************************************************
** 函数名称:  TwoASCToHex
** 功能描述:  ASCII转换成数值
** 输入参数:  ASC:ASCII数值
** 输出参数:  返回数值
** 创建:  oueh 2013.05.23
** Note:ASCII必须为数字或16进制的字母!
***************************************************************/
u8 TwoASCToHex(u8 ASC);

/*************************************************************
** 函数名称:  HexToTwoASC
** 功能描述:  HEX转换成2个ASCII
** 输入参数:  Hex:待转换的HEX
** 输出参数:  ASCHi返回高位的ASC，ASCLo返回低位的ASC
** 创建:  oueh 2013.05.23
** Note:
***************************************************************/
void HexToTwoASC(u8 Hex,u8 *ASCHi,u8 *ASCLo);

/*************************************************************
** 函数名称:  void App_Init()
** 功能描述:  初始化应用程序
** 输入参数:  无
** 输出参数:  无
** 创建:  oueh 2013.05.23
** Note:
***************************************************************/
void App_Init();

/*************************************************************
** 函数名称:  void AutoTest_Packet_Send()
** 功能描述:  自动测试分包发送
** 输入参数:  无
** 输出参数:  无
** 创建:  oueh 2013.08.23
** Note:
***************************************************************/
void AutoTest_Packet_Send();

#endif
